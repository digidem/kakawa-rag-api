name: Offline Stack Test

on:
  push:
    branches:
      - main

jobs:
  test-offline-stack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Set environment variables for offline run
        run: |
          echo "LANGFUSE_PUBLIC_KEY=\${{ secrets.LANGFUSE_PK }}" >> .env
          echo "LANGFUSE_SECRET_KEY=\${{ secrets.LANGFUSE_SK }}" >> .env
          echo "LANGFUSE_HOST=\${{ secrets.LANGFUSE_HOST }}" >> .env
          echo "OFFLINE=true" >> .env
      - name: Show contents of .env
        run: cat .env
      - name: Run docker-compose
        run: docker-compose up -d
      - name: List running containers
        run: docker ps
      - name: Pull Ollama model
        run: |
          OLLAMA_MODEL=$(grep OLLAMA_MODEL .env | cut -d '=' -f2)
          curl -X POST \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"$OLLAMA_MODEL\"}" \
            http://localhost:11434/api/pull
      - name: Curl LangFuse API endpoint for testing
        run: |
          curl -X 'GET' \
            'http://localhost:3000/api/public/health' \
            -H 'accept: application/json'
      - name: Curl Qdrant API endpoint for testing
        run: |
          curl -X 'GET' \
            'http://localhost:6333/' \
            -H 'accept: application/json'
      - name: Curl RAG API endpoint for testing
        run: |
          commit_hash=$(git rev-parse --short HEAD)
          echo $commit_hash
          curl -X 'GET' \
            'http://localhost:8000/rag?query=How%20to%20install%20Mapeo&user_id=github_action&session_id=$commit_hash' \
            -H 'accept: application/json'
